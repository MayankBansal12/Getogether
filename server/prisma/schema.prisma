// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  name             String
  email            String             @unique
  password         String
  phone            String
  about            String
  profilePic       String
  PicName          String
  Photographer     Photographer?
  EventParticipant EventParticipant[]
  Vendor           Vendor?
  Payer            Payment[]          @relation(name: "Payer")
  Payee            Payment[]          @relation(name: "Payee")
  FCM              FCM?
}

model FCM {
  userId   Int    @id @unique
  endPoint String
  p256dh   String
  auth     String
  User     User   @relation(fields: [userId], references: [id])
}

model Budget {
  id          Int   @id @default(autoincrement())
  eventId     Int   @unique
  totalAmount Int
  spent       Int
  Event       Event @relation(fields: [eventId], references: [id])
}

model Photographer {
  id     Int     @id @default(autoincrement())
  userId Int     @unique
  Photo  Photo[]
  User   User    @relation(fields: [userId], references: [id])
}

model Photo {
  id             Int          @id @default(autoincrement())
  photographerId Int
  eventId        Int
  private        Boolean
  photographer   Photographer @relation(fields: [photographerId], references: [id])
  Event          Event        @relation(fields: [eventId], references: [id])
}

model Event {
  id               Int                @id @default(autoincrement())
  name             String
  desc             String
  date             DateTime
  EventParticipant EventParticipant[]
  Photo            Photo[]
  Vendor           Vendor[]
  Budget           Budget?
  Channel          Channel[]
  ChatParticipant  ChatParticipant[]
  Chat             Chat[]
}

model Channel {
  id                 Int                  @id @default(autoincrement())
  eventId            Int
  name               String
  venue              String
  startTime          DateTime
  endTime            DateTime
  Event              Event                @relation(fields: [eventId], references: [id])
  ChannelService     ChannelService[]
  GroupRelation      GroupRelation[]
  ChannelParticipant ChannelParticipant[]
}

model ChannelParticipant {
  id               Int              @id @default(autoincrement())
  participantId    Int
  channelId        Int
  Channel          Channel          @relation(fields: [channelId], references: [id])
  EventParticipant EventParticipant @relation(fields: [participantId], references: [id])
  GroupMessage     GroupMessage[]
}

model GroupRelation {
  id        Int     @id @default(autoincrement())
  groupId   Int
  channelId Int
  Group     Group   @relation(fields: [groupId], references: [id])
  Channel   Channel @relation(fields: [channelId], references: [id])
}

model Group {
  id            Int             @id @default(autoincrement())
  name          String
  desc          String
  eventId       Int
  GroupRelation GroupRelation[]
  GroupMessage  GroupMessage[]
}

model GroupMessage {
  id                       Int                @id @default(autoincrement())
  groupId                  Int
  senderId                 Int
  message                  String
  photos                   String
  Group                    Group              @relation(fields: [groupId], references: [id])
  SenderChannelParticipant ChannelParticipant @relation(fields: [senderId], references: [id])
}

model ChannelService {
  id        Int     @id @default(autoincrement())
  channelId Int
  vendorId  Int
  Vendor    Vendor  @relation(fields: [vendorId], references: [id])
  Channel   Channel @relation(fields: [channelId], references: [id])
}

model EventParticipant {
  id                 Int                  @id @default(autoincrement())
  eventId            Int
  userId             Int
  role               String
  status             Int
  Event              Event                @relation(fields: [eventId], references: [id])
  User               User                 @relation(fields: [userId], references: [id])
  ChatParticipant    ChatParticipant[]
  SendChat           Chat[]               @relation(name: "SenderEventParticipant")
  ReceivedChat       Chat[]               @relation(name: "ReceiverEventParticipant")
  ChannelParticipant ChannelParticipant[]

  @@unique([eventId, userId], name: "UserEventUnique")
}

model Vendor {
  id             Int              @id @default(autoincrement())
  userId         Int              @unique
  eventId        Int
  service        String
  Event          Event            @relation(fields: [eventId], references: [id])
  User           User             @relation(fields: [userId], references: [id])
  ChannelService ChannelService[]
}

model Payment {
  id      Int  @id @default(autoincrement())
  amount  Int
  date    Int
  payerId Int
  payeeId Int
  eventId Int
  status  Int
  // Set relation of payeeId and payerId to User table
  Payer   User @relation(name: "Payer", fields: [payerId], references: [id])
  Payee   User @relation(name: "Payee", fields: [payeeId], references: [id])
}

model Chat {
  id                       Int               @id @default(autoincrement())
  eventId                  Int
  senderId                 Int
  receiverId               Int
  message                  String
  time                     DateTime
  ChatParticipant          ChatParticipant[]
  Event                    Event             @relation(fields: [eventId], references: [id])
  SenderEventParticipant   EventParticipant  @relation(name: "SenderEventParticipant", fields: [senderId], references: [id])
  ReceiverEventParticipant EventParticipant  @relation(name: "ReceiverEventParticipant", fields: [receiverId], references: [id])
}

model ChatParticipant {
  id               Int              @id @default(autoincrement())
  eventId          Int
  participantId    Int
  chatId           Int
  Chat             Chat             @relation(fields: [chatId], references: [id])
  EventParticipant EventParticipant @relation(fields: [participantId], references: [id])
  Event            Event            @relation(fields: [eventId], references: [id])
}
